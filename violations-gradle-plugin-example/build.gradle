buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		classpath "se.bjurr.violations:violations-gradle-plugin:+"
	}
}

apply plugin: "java"
apply plugin: "se.bjurr.violations.violations-gradle-plugin"

task violations(type: se.bjurr.violations.gradle.plugin.ViolationsTask) {
	//
	// Optional config
	//
	maxReporterColumnWidth = 0 // 0 is disabled
	maxRuleColumnWidth = 10
	maxSeverityColumnWidth = 0
	maxLineColumnWidth = 0
	maxMessageColumnWidth = 50
	codeClimateFile = file('code-climate-file.json') // Will create a CodeClimate JSON report.
	violationsFile = file('violations-file.json') // Will create a normalized JSON report.

	//
	// Global configuration, remove if you dont want to report violations for
	// the entire repo.
	//
	minSeverity = 'INFO' // INFO, WARN or ERROR
	detailLevel = 'VERBOSE' // PER_FILE_COMPACT, COMPACT or VERBOSE
	maxViolations = 99999999 // Will fail the build if total number of found violations is higher
	printViolations = true // Will print violations found in diff


	//
	// Diff configuration, remove if you dont want to report violations for
	// files changed between specific revisions.
	//
	// diff-properties can be supplied with something like:
	//
	// ./gradlew violations -i -PdiffFrom=e4de20e -PdiffTo=HEAD
	//
	// And in Travis, you could add:
	//
	//  script:
	//   - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then bash ./gradlew check -PdiffFrom=$TRAVIS_PULL_REQUEST_BRANCH -PdiffTo=$TRAVIS_BRANCH ; fi'
	//
	diffFrom = project.properties.diffFrom // Can be empty (ignored), Git-commit or any Git-reference
	diffTo = project.properties.diffTo // Same as above
	diffMinSeverity = 'INFO' // INFO, WARN or ERROR
	diffDetailLevel = 'VERBOSE' // PER_FILE_COMPACT, COMPACT or VERBOSE
	diffMaxViolations = 99 // Will fail the build if number of violations, in the diff within from/to, is higher
	diffPrintViolations = true // Will print violations found in diff
	gitRepo = file('.') // Where to look for Git


	//
	// This is mandatory regardless of if you want to report violations between
	// revisions or the entire repo.
	//
	// Many more formats available, see: https://github.com/tomasbjerre/violations-lib
	violations = [
		[
			"FINDBUGS",
			projectDir.path,
			".*/findbugs/.*\\.xml\$",
			"Findbugs"
		],
		[
			"PMD",
			projectDir.path,
			".*/pmd/.*\\.xml\$",
			"PMD"
		],
		[
			"CHECKSTYLE",
			projectDir.path,
			".*/checkstyle/.*\\.xml\$",
			"Checkstyle"
		],
		[
			"JSLINT",
			projectDir.path,
			".*/jshint/.*\\.xml\$",
			"JSHint"
		],
		[
			"CSSLINT",
			projectDir.path,
			".*/csslint/.*\\.xml\$",
			"CssLint"
		]
	]
}
